name: Documentation

on:
  push:
    branches:
    - master
    paths:
    - Documentation/**
    - .github/workflows/**
  pull_request:
    branches:
    - master
    paths:
    - Documentation/**
    - .github/workflows/**

jobs:
  documentation:
    runs-on: ubuntu-22.04

    steps:
    - name: install packages
      run: |
        sudo apt-get -y update
        sudo apt-get -y install asciidoc docbook-xml w3m

    - name: checkout sources
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: set the version information
      id: version_number
      uses: ./.github/actions/manage-version
      with:
        nightly-builds-secret: ${{ secrets.NIGHTLY_BUILDS }}

    - name: process the documentation
      working-directory: Documentation
      run: make

    - name: publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Subsurface-Documentation-${{ steps.version_number.outputs.version }}
        path: |
          Documentation/user-manual*.text
          Documentation/user-manual*.html
          Documentation/user-manual*.pdf
          Documentation/mobile-manual-v3.text
          Documentation/mobile-manual-v3.html
          Documentation/mobile-manual-v3.pdf
          Documentation/images/
          Documentation/mobile-images/

  check_documentation:
    needs: documentation
    runs-on: ubuntu-22.04

    steps:
    - name: checkout sources
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: set the version information
      id: version_number
      uses: ./.github/actions/manage-version
      with:
        nightly-builds-secret: ${{ secrets.NIGHTLY_BUILDS }}

    - name: fetch artifacts
      uses: actions/download-artifact@v4
      with:
        name: Subsurface-Documentation-${{ steps.version_number.outputs.version }}
        path: Documentation/

    - name: check match with checked in versions
      run: |
        cd Documentation
        for file in user-manual*.html.git mobile-manual-v3.html.git; do
          diff -uw <(tail -n +8 $file | head -n -5) <(tail -n +8 ${file%.git} | head -n -5)
          if [ $? -ne 0 ] ; then
            echo "The html version of the documentation in the repository (\`$file\`) does not match the latest generated html version.\nPlease grab the latest version from the artifacts of the 'Documentation' workflow (\`${file%.git}\`) and commit it to the repository as \`$file\`."
            exit 1
          fi
        done
